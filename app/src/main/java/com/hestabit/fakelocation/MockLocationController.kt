package com.hestabit.fakelocation

import android.content.Context
import android.location.Location
import android.os.Build
import android.os.Looper
import android.os.SystemClock
import android.util.Log
import androidx.annotation.RequiresApi
import androidx.core.app.ActivityCompat
import com.google.android.gms.location.FusedLocationProviderClient
import com.google.android.gms.location.LocationCallback
import com.google.android.gms.location.LocationRequest
import com.google.android.gms.location.LocationResult
import com.google.android.gms.location.LocationServices
import com.google.android.gms.location.Priority
import dagger.hilt.android.qualifiers.ApplicationContext
import kotlinx.coroutines.*
import javax.inject.Inject
import javax.inject.Singleton
import kotlin.coroutines.resume

data class RoutePoint(
    val latitude: Double,
    val longitude: Double,
    val accuracy: Float = 5.0f
)

@Singleton
class MockLocationController @Inject constructor(
    @ApplicationContext private val context: Context
) {
    private val fusedLocationClient: FusedLocationProviderClient =
        LocationServices.getFusedLocationProviderClient(context)

    private var routeJob: Job? = null
    private var isRouteActive = false

    private var locationCallback: LocationCallback? = null
    private var locationRequest: LocationRequest? = null

    suspend fun enableMockMode(enable: Boolean): Boolean {
        return suspendCancellableCoroutine { continuation ->
            if (checkLocationPermissions()) {
                fusedLocationClient.setMockMode(enable)
                    .addOnSuccessListener {
                        Log.d("MockLocation", "Mock mode ${if (enable) "enabled" else "disabled"}")
                        continuation.resume(true)
                    }
                    .addOnFailureListener { exception ->
                        Log.e("MockLocation", "Failed to set mock mode", exception)
                        continuation.resume(false)
                    }
            } else {
                continuation.resume(false)
            }
        }
    }

    suspend fun setMockLocation(
        latitude: Double,
        longitude: Double,
        accuracy: Float = 5.0f
    ): Boolean {
        val mockLocation = Location("fused").apply {
            this.latitude = latitude
            this.longitude = longitude
            this.accuracy = accuracy
            this.time = System.currentTimeMillis()
            this.elapsedRealtimeNanos = SystemClock.elapsedRealtimeNanos()
        }

        return suspendCancellableCoroutine { continuation ->
            if (checkLocationPermissions()) {
                fusedLocationClient.setMockLocation(mockLocation)
                    .addOnSuccessListener {
                        continuation.resume(true)
                    }
                    .addOnFailureListener { exception ->
                        Log.e("MockLocation", "Failed to set mock location", exception)
                        continuation.resume(false)
                    }
            } else {
                continuation.resume(false)
            }
        }
    }

    /**
     * Parse coordinate string and create route points
     */
    fun parseCoordinateString(coordinateString: String): List<RoutePoint> {
        val coordinates = mutableListOf<RoutePoint>()

        try {
            val lines = coordinateString.trim().split("\n")

            for (line in lines) {
                val parts = line.trim().split(",")
                if (parts.size >= 2) {
                    val lat = parts[0].trim().toDoubleOrNull()
                    val lng = parts[1].trim().toDoubleOrNull()

                    if (lat != null && lng != null) {
                        coordinates.add(RoutePoint(lat, lng))
                    }
                }
            }

            Log.d("MockLocation", "Parsed ${coordinates.size} coordinates from string")
        } catch (e: Exception) {
            Log.e("MockLocation", "Error parsing coordinates", e)
        }

        return coordinates
    }

    /**
     * Your predefined route coordinates
     */
    fun getOfficeToHomeRoute(): List<RoutePoint> {
        val coordinateString = """
            28.63101, 77.38417, 
            28.63132, 77.38422, 
            28.63139, 77.38358, 
            28.63174, 77.38358, 
            28.63164, 77.38303, 
            28.63156, 77.38251, 
            28.63153, 77.38216, 
            28.63152, 77.38207, 
            28.63147, 77.38163, 
            28.63144, 77.38141, 
            28.63141, 77.38100, 
            28.63141, 77.38092, 
            28.63135, 77.38034, 
            28.63136, 77.38005, 
            28.63136, 77.37997, 
            28.63136, 77.37991, 
            28.63135, 77.37936, 
            28.63135, 77.37904, 
            28.63135, 77.37903, 
            28.63136, 77.37852, 
            28.63136, 77.37835, 
            28.63136, 77.37807, 
            28.63136, 77.37801, 
            28.63136, 77.37790, 
            28.63136, 77.37779, 
            28.63135, 77.37769, 
            28.63134, 77.37742, 
            28.63133, 77.37736, 
            28.63130, 77.37697, 
            28.63127, 77.37680, 
            28.63125, 77.37664, 
            28.63123, 77.37611, 
            28.63123, 77.37561, 
            28.63123, 77.37531, 
            28.63124, 77.37521, 
            28.63123, 77.37515, 
            28.63121, 77.37508, 
            28.63112, 77.37494, 
            28.63110, 77.37493, 
            28.63105, 77.37490, 
            28.63100, 77.37487, 
            28.63095, 77.37483, 
            28.63093, 77.37481, 
            28.63091, 77.37478, 
            28.63089, 77.37474, 
            28.63088, 77.37471, 
            28.63087, 77.37467, 
            28.63086, 77.37463, 
            28.63086, 77.37459, 
            28.63086, 77.37455, 
            28.63086, 77.37451, 
            28.63087, 77.37447, 
            28.63088, 77.37443, 
            28.63089, 77.37440, 
            28.63091, 77.37436, 
            28.63093, 77.37433, 
            28.63095, 77.37430, 
            28.63098, 77.37427, 
            28.63099, 77.37426, 
            28.63100, 77.37426, 
            28.63103, 77.37423, 
            28.63106, 77.37421, 
            28.63110, 77.37419, 
            28.63113, 77.37418, 
            28.63115, 77.37418, 
            28.63118, 77.37417, 
            28.63123, 77.37416, 
            28.63129, 77.37415, 
            28.63134, 77.37415, 
            28.63140, 77.37415, 
            28.63145, 77.37416, 
            28.63151, 77.37418, 
            28.63153, 77.37419, 
            28.63157, 77.37421, 
            28.63160, 77.37423, 
            28.63164, 77.37426, 
            28.63167, 77.37429, 
            28.63169, 77.37430, 
            28.63175, 77.37428, 
            28.63178, 77.37427, 
            28.63181, 77.37425, 
            28.63186, 77.37422, 
            28.63187, 77.37419, 
            28.63196, 77.37401, 
            28.63199, 77.37281, 
            28.63201, 77.37161, 
            28.63201, 77.37120, 
            28.63201, 77.37107, 
            28.63201, 77.37066, 
            28.63201, 77.37063, 
            28.63203, 77.37001, 
            28.63203, 77.36940, 
            28.63203, 77.36939, 
            28.63204, 77.36919, 
            28.63204, 77.36902, 
            28.63204, 77.36878, 
            28.63204, 77.36841, 
            28.63205, 77.36820, 
            28.63205, 77.36813, 
            28.63204, 77.36794, 
            28.63205, 77.36732, 
            28.63205, 77.36589, 
            28.63205, 77.36568, 
            28.63206, 77.36425, 
            28.63206, 77.36397, 
            28.63206, 77.36369, 
            28.63208, 77.36103, 
            28.63208, 77.36102, 
            28.63208, 77.36082, 
            28.63208, 77.36064, 
            28.63208, 77.36044, 
            28.63208, 77.36024, 
            28.63208, 77.36021, 
            28.63209, 77.35806, 
            28.63209, 77.35781, 
            28.63209, 77.35760, 
            28.63210, 77.35634, 
            28.63211, 77.35552, 
            28.63211, 77.35524, 
            28.63211, 77.35510, 
            28.63211, 77.35476, 
            28.63211, 77.35471, 
            28.63211, 77.35450, 
            28.63213, 77.35350, 
            28.63213, 77.35308, 
            28.63213, 77.35287, 
            28.63214, 77.35207, 
            28.63215, 77.35063, 
            28.63215, 77.35061, 
            28.63215, 77.35029, 
            28.63215, 77.34999, 
            28.63215, 77.34988, 
            28.63215, 77.34957, 
            28.63215, 77.34951, 
            28.63215, 77.34947, 
            28.63215, 77.34940, 
            28.63215, 77.34930, 
            28.63216, 77.34926, 
            28.63216, 77.34876, 
            28.63216, 77.34861, 
            28.63216, 77.34831, 
            28.63216, 77.34809, 
            28.63216, 77.34756, 
            28.63217, 77.34674, 
            28.63217, 77.34606, 
            28.63218, 77.34584, 
            28.63217, 77.34527, 
            28.63214, 77.34411, 
            28.63213, 77.34297, 
            28.63213, 77.34258, 
            28.63214, 77.34207, 
            28.63214, 77.34144, 
            28.63219, 77.33877, 
            28.63220, 77.33850, 
            28.63220, 77.33841, 
            28.63220, 77.33835, 
            28.63220, 77.33826, 
            28.63220, 77.33820, 
            28.63220, 77.33803, 
            28.63221, 77.33787, 
            28.63221, 77.33785, 
            28.63221, 77.33771, 
            28.63221, 77.33710, 
            28.63221, 77.33695, 
            28.63221, 77.33689, 
            28.63222, 77.33657, 
            28.63222, 77.33645, 
            28.63224, 77.33556, 
            28.63225, 77.33543, 
            28.63226, 77.33528, 
            28.63226, 77.33503, 
            28.63226, 77.33488, 
            28.63226, 77.33480, 
            28.63226, 77.33467, 
            28.63226, 77.33447, 
            28.63226, 77.33443, 
            28.63226, 77.33434, 
            28.63225, 77.33425, 
            28.63224, 77.33409, 
            28.63224, 77.33405, 
            28.63223, 77.33382, 
            28.63220, 77.33356, 
            28.63217, 77.33336, 
            28.63217, 77.33335, 
            28.63213, 77.33313, 
            28.63208, 77.33286, 
            28.63201, 77.33259, 
            28.63192, 77.33224, 
            28.63180, 77.33183, 
            28.63173, 77.33161, 
            28.63171, 77.33155, 
            28.63165, 77.33135, 
            28.63161, 77.33123, 
            28.63149, 77.33084, 
            28.63144, 77.33071, 
            28.63133, 77.33038, 
            28.63133, 77.33037, 
            28.63129, 77.33027, 
            28.63126, 77.33017, 
            28.63120, 77.32998, 
            28.63114, 77.32979, 
            28.63113, 77.32977, 
            28.63101, 77.32940, 
            28.63094, 77.32919, 
            28.63082, 77.32883, 
            28.63081, 77.32878, 
            28.63076, 77.32863, 
            28.63070, 77.32844, 
            28.63058, 77.32805, 
            28.63052, 77.32786, 
            28.63041, 77.32754, 
            28.63036, 77.32735, 
            28.63032, 77.32724, 
            28.63032, 77.32722, 
            28.63028, 77.32712, 
            28.63021, 77.32688, 
            28.63016, 77.32673, 
            28.63010, 77.32654, 
            28.63009, 77.32650, 
            28.63004, 77.32635, 
            28.62988, 77.32587, 
            28.62977, 77.32554, 
            28.62973, 77.32539, 
            28.62962, 77.32505, 
            28.62943, 77.32448, 
            28.62932, 77.32419, 
            28.62931, 77.32414, 
            28.62920, 77.32380, 
            28.62918, 77.32373, 
            28.62906, 77.32338, 
            28.62893, 77.32299, 
            28.62880, 77.32278, 
            28.62879, 77.32276, 
            28.62878, 77.32273, 
            28.62853, 77.32204, 
            28.62836, 77.32145, 
            28.62818, 77.32093, 
            28.62805, 77.32051, 
            28.62782, 77.31984, 
            28.62756, 77.31906, 
            28.62743, 77.31868, 
            28.62736, 77.31847, 
            28.62731, 77.31835, 
            28.62724, 77.31818, 
            28.62722, 77.31818, 
            28.62721, 77.31817, 
            28.62718, 77.31813, 
            28.62716, 77.31808, 
            28.62715, 77.31804, 
            28.62714, 77.31802, 
            28.62711, 77.31793, 
            28.62708, 77.31784, 
            28.62708, 77.31781, 
            28.62707, 77.31769, 
            28.62707, 77.31764, 
            28.62707, 77.31758, 
            28.62707, 77.31757, 
            28.62709, 77.31753, 
            28.62710, 77.31749, 
            28.62711, 77.31747, 
            28.62716, 77.31742, 
            28.62720, 77.31738, 
            28.62726, 77.31735, 
            28.62732, 77.31732, 
            28.62737, 77.31732, 
            28.62743, 77.31732, 
            28.62749, 77.31733, 
            28.62750, 77.31734, 
            28.62751, 77.31734, 
            28.62753, 77.31735, 
            28.62754, 77.31735, 
            28.62755, 77.31736, 
            28.62756, 77.31736, 
            28.62757, 77.31737, 
            28.62758, 77.31738, 
            28.62763, 77.31739, 
            28.62781, 77.31737, 
            28.62806, 77.31728, 
            28.62817, 77.31724, 
            28.62822, 77.31721, 
            28.62829, 77.31719, 
            28.62834, 77.31717, 
            28.62885, 77.31697, 
            28.62891, 77.31694, 
            28.62902, 77.31690, 
            28.62953, 77.31669, 
            28.62965, 77.31664, 
            28.62978, 77.31659, 
            28.62998, 77.31650, 
            28.63017, 77.31643, 
            28.63018, 77.31642, 
            28.63019, 77.31642, 
            28.63020, 77.31642, 
            28.63021, 77.31642, 
            28.63023, 77.31643, 
            28.63027, 77.31645, 
            28.63037, 77.31650, 
            28.63062, 77.31640, 
            28.63137, 77.31614, 
            28.63170, 77.31602, 
            28.63187, 77.31595, 
            28.63188, 77.31595, 
            28.63205, 77.31589, 
            28.63272, 77.31564, 
            28.63292, 77.31557, 
            28.63311, 77.31550, 
            28.63328, 77.31543, 
            28.63345, 77.31536, 
            28.63369, 77.31526, 
            28.63379, 77.31522, 
            28.63396, 77.31515, 
            28.63413, 77.31508, 
            28.63414, 77.31508, 
            28.63423, 77.31505, 
            28.63430, 77.31502, 
            28.63472, 77.31487, 
            28.63506, 77.31476, 
            28.63512, 77.31474, 
            28.63524, 77.31472, 
            28.63542, 77.31468, 
            28.63556, 77.31465, 
            28.63578, 77.31461, 
            28.63585, 77.31460, 
            28.63593, 77.31459, 
            28.63598, 77.31458, 
            28.63609, 77.31456, 
            28.63627, 77.31453, 
            28.63629, 77.31452, 
            28.63644, 77.31450, 
            28.63649, 77.31449, 
            28.63660, 77.31448, 
            28.63662, 77.31448, 
            28.63667, 77.31447, 
            28.63680, 77.31447, 
            28.63694, 77.31446, 
            28.63702, 77.31446, 
            28.63711, 77.31447, 
            28.63750, 77.31449, 
            28.63769, 77.31452, 
            28.63783, 77.31454, 
            28.63787, 77.31455, 
            28.63788, 77.31455, 
            28.63812, 77.31459, 
            28.63832, 77.31465, 
            28.63836, 77.31466, 
            28.63888, 77.31482, 
            28.63888, 77.31483, 
            28.63905, 77.31489, 
            28.63948, 77.31502, 
            28.63965, 77.31508, 
            28.63982, 77.31514, 
            28.63999, 77.31520, 
            28.64008, 77.31523, 
            28.64027, 77.31532, 
            28.64069, 77.31542, 
            28.64134, 77.31569, 
            28.64167, 77.31584, 
            28.64183, 77.31591, 
            28.64223, 77.31605, 
            28.64236, 77.31610, 
            28.64306, 77.31636, 
            28.64412, 77.31670, 
            28.64423, 77.31674, 
            28.64444, 77.31681, 
            28.64451, 77.31684, 
            28.64489, 77.31697, 
            28.64519, 77.31708, 
            28.64540, 77.31715, 
            28.64552, 77.31718, 
            28.64568, 77.31724, 
            28.64582, 77.31729, 
            28.64616, 77.31740, 
            28.64633, 77.31746, 
            28.64646, 77.31750, 
            28.64679, 77.31762, 
            28.64685, 77.31764, 
            28.64707, 77.31772, 
            28.64801, 77.31806, 
            28.64818, 77.31813, 
            28.64843, 77.31822, 
            28.64854, 77.31826, 
            28.64863, 77.31829, 
            28.64882, 77.31835, 
            28.64928, 77.31852, 
            28.64932, 77.31854, 
            28.64943, 77.31858, 
            28.64952, 77.31861, 
            28.64961, 77.31864, 
            28.64967, 77.31866, 
            28.64972, 77.31868, 
            28.65036, 77.31890, 
            28.65116, 77.31918, 
            28.65153, 77.31929, 
            28.65164, 77.31932, 
            28.65174, 77.31936, 
            28.65190, 77.31939, 
            28.65219, 77.31945, 
            28.65226, 77.31947, 
            28.65253, 77.31952, 
            28.65268, 77.31954, 
            28.65271, 77.31954, 
            28.65280, 77.31955, 
            28.65303, 77.31957, 
            28.65325, 77.31959, 
            28.65335, 77.31960, 
            28.65349, 77.31960, 
            28.65356, 77.31961, 
            28.65378, 77.31963, 
            28.65393, 77.31964, 
            28.65429, 77.31967, 
            28.65437, 77.31966, 
            28.65454, 77.31966, 
            28.65464, 77.31965, 
            28.65471, 77.31966, 
            28.65497, 77.31968, 
            28.65503, 77.31968, 
            28.65515, 77.31969, 
            28.65535, 77.31970, 
            28.65751, 77.31983, 
            28.65913, 77.31992, 
            28.65934, 77.31994, 
            28.65941, 77.31994, 
            28.65970, 77.31994, 
            28.66005, 77.31995, 
            28.66021, 77.31997, 
            28.66046, 77.31998, 
            28.66074, 77.31999, 
            28.66119, 77.32000, 
            28.66147, 77.32001, 
            28.66161, 77.32003, 
            28.66172, 77.32004, 
            28.66179, 77.32005, 
            28.66204, 77.32008, 
            28.66232, 77.32011, 
            28.66251, 77.32014, 
            28.66271, 77.32018, 
            28.66291, 77.32023, 
            28.66312, 77.32029, 
            28.66342, 77.32038, 
            28.66372, 77.32049, 
            28.66386, 77.32054, 
            28.66394, 77.32057, 
            28.66411, 77.32062, 
            28.66428, 77.32068, 
            28.66431, 77.32070, 
            28.66445, 77.32074, 
            28.66463, 77.32080, 
            28.66470, 77.32082, 
            28.66487, 77.32087, 
            28.66504, 77.32092, 
            28.66512, 77.32095, 
            28.66539, 77.32104, 
            28.66556, 77.32110, 
            28.66577, 77.32117, 
            28.66625, 77.32133, 
            28.66662, 77.32146, 
            28.66694, 77.32157, 
            28.66695, 77.32158, 
            28.66728, 77.32170, 
            28.66738, 77.32173, 
            28.66758, 77.32180, 
            28.66763, 77.32182, 
            28.66780, 77.32188, 
            28.66790, 77.32192, 
            28.66795, 77.32194, 
            28.66814, 77.32200, 
            28.66827, 77.32204, 
            28.66853, 77.32213, 
            28.66861, 77.32216, 
            28.66864, 77.32217, 
            28.66880, 77.32222, 
            28.66882, 77.32223, 
            28.66901, 77.32230, 
            28.66923, 77.32238, 
            28.66943, 77.32245, 
            28.66960, 77.32251, 
            28.66978, 77.32257, 
            28.66999, 77.32265, 
            28.67000, 77.32265, 
            28.67007, 77.32267, 
            28.67013, 77.32269, 
            28.67016, 77.32270, 
            28.67020, 77.32271, 
            28.67024, 77.32271, 
            28.67034, 77.32268, 
            28.67044, 77.32272, 
            28.67050, 77.32275, 
            28.67056, 77.32277, 
            28.67060, 77.32275, 
            28.67064, 77.32273, 
            28.67071, 77.32272, 
            28.67079, 77.32272, 
            28.67097, 77.32273, 
            28.67123, 77.32275, 
            28.67159, 77.32276, 
            28.67171, 77.32276, 
            28.67185, 77.32277, 
            28.67195, 77.32276, 
            28.67243, 77.32276, 
            28.67290, 77.32276, 
            28.67315, 77.32275, 
            28.67330, 77.32275, 
            28.67337, 77.32274, 
            28.67345, 77.32274, 
            28.67352, 77.32274, 
            28.67380, 77.32274, 
            28.67410, 77.32273, 
            28.67418, 77.32272, 
            28.67431, 77.32272, 
            28.67436, 77.32272, 
            28.67472, 77.32271, 
            28.67505, 77.32271, 
            28.67522, 77.32271, 
            28.67558, 77.32271, 
            28.67562, 77.32271, 
            28.67586, 77.32272, 
            28.67596, 77.32271, 
            28.67600, 77.32271, 
            28.67604, 77.32271, 
            28.67605, 77.32271, 
            28.67618, 77.32271, 
            28.67622, 77.32271, 
            28.67629, 77.32271, 
            28.67631, 77.32271, 
            28.67640, 77.32271, 
            28.67641, 77.32271, 
            28.67654, 77.32272, 
            28.67658, 77.32272, 
            28.67706, 77.32287, 
            28.67751, 77.32303, 
            28.67752, 77.32303, 
            28.67786, 77.32316, 
            28.67787, 77.32316, 
            28.67811, 77.32327, 
            28.67871, 77.32350, 
            28.67883, 77.32357, 
            28.67891, 77.32362, 
            28.67899, 77.32367, 
            28.67905, 77.32373, 
            28.67911, 77.32379, 
            28.67929, 77.32401, 
            28.67935, 77.32411, 
            28.67945, 77.32437, 
            28.67950, 77.32445, 
            28.68003, 77.32544, 
            28.68018, 77.32572, 
            28.68020, 77.32575, 
            28.68029, 77.32596, 
            28.68075, 77.32726, 
            28.68113, 77.32818, 
            28.68115, 77.32819, 
            28.68116, 77.32819, 
            28.68118, 77.32820, 
            28.68119, 77.32821, 
            28.68121, 77.32823, 
            28.68190, 77.32784, 
            28.68298, 77.32708, 
            28.68316, 77.32694, 
            28.68396, 77.32643, 
            28.68458, 77.32606, 
            28.68470, 77.32598, 
            28.68481, 77.32591, 
            28.68536, 77.32557, 
            28.68662, 77.32468, 
            28.68682, 77.32454, 
            28.68697, 77.32437, 
            28.68738, 77.32407, 
            28.68747, 77.32401, 
            28.68748, 77.32401, 
            28.68818, 77.32350, 
            28.68889, 77.32298, 
            28.68920, 77.32276, 
            28.68942, 77.32263, 
            28.68951, 77.32258, 
            28.68918, 77.32226, 
            28.68888, 77.32195, 
            28.68887, 77.32194, 
            28.68871, 77.32176, 
            28.68861, 77.32166, 
            28.68850, 77.32155, 
            28.68809, 77.32110, 
            28.68805, 77.32105, 
            28.68772, 77.32070, 
            28.68765, 77.32063, 
            28.68755, 77.32051, 
            28.68758, 77.32048, 
            28.68762, 77.32045, 
            28.68796, 77.32002, 
            28.68805, 77.31991, 
            28.68824, 77.31963, 
            28.68837, 77.31947, 
            28.68847, 77.31934, 
            28.68863, 77.31915, 
            28.68876, 77.31904, 
            28.68888, 77.31896, 
            28.68896, 77.31890, 
            28.68925, 77.31869, 
            28.68929, 77.31867, 
            28.69000, 77.31813, 
            28.69059, 77.31765, 
            28.69108, 77.31732, 
            28.69146, 77.31702, 
            28.69206, 77.31656, 
            28.69248, 77.31623, 
            28.69309, 77.31571, 
            28.69361, 77.31533, 
            28.69365, 77.31530, 
            28.69404, 77.31502, 
            28.69409, 77.31499, 
            28.69418, 77.31494, 
            28.69418, 77.31493, 
            28.69418, 77.31492, 
            28.69418, 77.31491, 
            28.69418, 77.31490, 
            28.69419, 77.31490, 
            28.69376, 77.31429, 
            28.69355, 77.31395, 
            28.69330, 77.31354, 
            28.69307, 77.31316, 
            28.69252, 77.31230, 
            28.69228, 77.31193, 
            28.69221, 77.31182, 
            28.69201, 77.31150, 
            28.69169, 77.31099, 
            28.69147, 77.31066, 
            28.69132, 77.31041, 
            28.69119, 77.31020, 
            28.69085, 77.30965, 
            28.69048, 77.30906, 
            28.69048, 77.30905, 
            28.69043, 77.30898, 
            28.69033, 77.30877, 
            28.69010, 77.30837, 
            28.69005, 77.30829, 
            28.69002, 77.30823, 
            28.68999, 77.30818, 
            28.68997, 77.30812, 
            28.68996, 77.30806, 
            28.68995, 77.30801, 
            28.68994, 77.30789, 
            28.68990, 77.30726, 
            28.68990, 77.30718, 
            28.68989, 77.30700, 
            28.68989, 77.30697, 
            28.68988, 77.30647, 
            28.68986, 77.30609, 
            28.68984, 77.30572, 
            28.68982, 77.30540, 
            28.68981, 77.30530, 
            28.68981, 77.30521, 
            28.68978, 77.30479, 
            28.68975, 77.30444, 
            28.68973, 77.30417, 
            28.68972, 77.30398, 
            28.68970, 77.30383, 
            28.68970, 77.30375, 
            28.68969, 77.30364, 
            28.68968, 77.30355, 
            28.68967, 77.30347, 
            28.68967, 77.30341, 
            28.68962, 77.30288, 
            28.68957, 77.30226, 
            28.68955, 77.30203, 
            28.68953, 77.30179, 
            28.68952, 77.30156, 
            28.68951, 77.30133, 
            28.68951, 77.30119, 
            28.68950, 77.30108, 
            28.68950, 77.30091, 
            28.68948, 77.30029, 
            28.68948, 77.29989, 
            28.68948, 77.29986, 
            28.68947, 77.29967, 
            28.68947, 77.29947, 
            28.68947, 77.29936, 
            28.68947, 77.29930, 
            28.68947, 77.29925, 
            28.68947, 77.29891, 
            28.68946, 77.29846, 
            28.68945, 77.29836, 
            28.68944, 77.29758, 
            28.68943, 77.29725, 
            28.68943, 77.29710, 
            28.68942, 77.29676, 
            28.68941, 77.29620, 
            28.68941, 77.29602, 
            28.68940, 77.29565, 
            28.68940, 77.29556, 
            28.68939, 77.29499, 
            28.68938, 77.29474, 
            28.68938, 77.29443, 
            28.68937, 77.29429, 
            28.68937, 77.29417, 
            28.68936, 77.29408, 
            28.68935, 77.29401, 
            28.68935, 77.29391, 
            28.68934, 77.29372, 
            28.68933, 77.29354, 
            28.68933, 77.29347, 
            28.68933, 77.29336, 
            28.68933, 77.29312, 
            28.68932, 77.29290, 
            28.68931, 77.29274, 
            28.68930, 77.29252, 
            28.68930, 77.29235, 
            28.68929, 77.29203, 
            28.68929, 77.29200, 
            28.68928, 77.29190, 
            28.68926, 77.29134, 
            28.68925, 77.29101, 
            28.68923, 77.29067, 
            28.68923, 77.29031, 
            28.68922, 77.28990, 
            28.68922, 77.28966, 
            28.68921, 77.28936, 
            28.68919, 77.28909, 
            28.68919, 77.28895, 
            28.68920, 77.28862, 
            28.68920, 77.28842, 
            28.68931, 77.28768, 
            28.68925, 77.28769, 
            28.68909, 77.28771, 
            28.68899, 77.28775, 
            28.68867, 77.28781, 
            28.68850, 77.28784, 
            28.68833, 77.28787, 
            28.68786, 77.28795
        """.trimIndent()

        return parseCoordinateString(coordinateString)
    }

    fun getSpotToHomeRoute(): List<RoutePoint> {
        val coordinateString = """
            28.62630, 77.38158, 
28.62679, 77.38163, 
28.62736, 77.38167, 
28.62771, 77.38170, 
28.62853, 77.38179, 
28.62907, 77.38183, 
28.62925, 77.38185, 
28.62927, 77.38185, 
28.62987, 77.38193, 
28.63011, 77.38195, 
28.63023, 77.38196, 
28.63067, 77.38200, 
28.63106, 77.38204, 
28.63142, 77.38207, 
28.63152, 77.38207, 
28.63147, 77.38163, 
28.63144, 77.38141, 
28.63141, 77.38100, 
28.63141, 77.38092, 
28.63135, 77.38034, 
28.63136, 77.38005, 
28.63136, 77.37997, 
28.63136, 77.37991, 
28.63135, 77.37936, 
28.63135, 77.37904, 
28.63135, 77.37903, 
28.63136, 77.37852, 
28.63136, 77.37835, 
28.63136, 77.37807, 
28.63136, 77.37801, 
28.63136, 77.37790, 
28.63136, 77.37779, 
28.63135, 77.37769, 
28.63134, 77.37742, 
28.63133, 77.37736, 
28.63130, 77.37697, 
28.63127, 77.37680, 
28.63125, 77.37664, 
28.63123, 77.37611, 
28.63123, 77.37561, 
28.63123, 77.37531, 
28.63124, 77.37521, 
28.63123, 77.37515, 
28.63121, 77.37508, 
28.63112, 77.37494, 
28.63110, 77.37493, 
28.63105, 77.37490, 
28.63100, 77.37487, 
28.63095, 77.37483, 
28.63093, 77.37481, 
28.63091, 77.37478, 
28.63089, 77.37474, 
28.63088, 77.37471, 
28.63087, 77.37467, 
28.63086, 77.37463, 
28.63086, 77.37459, 
28.63086, 77.37455, 
28.63086, 77.37451, 
28.63087, 77.37447, 
28.63088, 77.37443, 
28.63089, 77.37440, 
28.63091, 77.37436, 
28.63093, 77.37433, 
28.63095, 77.37430, 
28.63098, 77.37427, 
28.63099, 77.37426, 
28.63100, 77.37426, 
28.63103, 77.37423, 
28.63106, 77.37421, 
28.63110, 77.37419, 
28.63113, 77.37418, 
28.63115, 77.37418, 
28.63118, 77.37417, 
28.63123, 77.37416, 
28.63129, 77.37415, 
28.63134, 77.37415, 
28.63140, 77.37415, 
28.63145, 77.37416, 
28.63151, 77.37418, 
28.63153, 77.37419, 
28.63157, 77.37421, 
28.63160, 77.37423, 
28.63164, 77.37426, 
28.63167, 77.37429, 
28.63169, 77.37430, 
28.63175, 77.37428, 
28.63178, 77.37427, 
28.63181, 77.37425, 
28.63186, 77.37422, 
28.63187, 77.37419, 
28.63196, 77.37401, 
28.63199, 77.37281, 
28.63201, 77.37161, 
28.63201, 77.37120, 
28.63201, 77.37107, 
28.63201, 77.37066, 
28.63201, 77.37063, 
28.63203, 77.37001, 
28.63203, 77.36940, 
28.63203, 77.36939, 
28.63204, 77.36919, 
28.63204, 77.36902, 
28.63204, 77.36878, 
28.63204, 77.36841, 
28.63205, 77.36820, 
28.63205, 77.36813, 
28.63204, 77.36794, 
28.63205, 77.36732, 
28.63205, 77.36589, 
28.63205, 77.36568, 
28.63206, 77.36425, 
28.63206, 77.36397, 
28.63206, 77.36369, 
28.63208, 77.36103, 
28.63208, 77.36102, 
28.63208, 77.36082, 
28.63208, 77.36064, 
28.63208, 77.36044, 
28.63208, 77.36024, 
28.63208, 77.36021, 
28.63209, 77.35806, 
28.63209, 77.35781, 
28.63209, 77.35760, 
28.63210, 77.35634, 
28.63211, 77.35552, 
28.63211, 77.35524, 
28.63211, 77.35510, 
28.63211, 77.35476, 
28.63211, 77.35471, 
28.63211, 77.35450, 
28.63213, 77.35350, 
28.63213, 77.35308, 
28.63213, 77.35287, 
28.63214, 77.35207, 
28.63215, 77.35063, 
28.63215, 77.35061, 
28.63215, 77.35029, 
28.63215, 77.34999, 
28.63215, 77.34988, 
28.63215, 77.34957, 
28.63215, 77.34951, 
28.63215, 77.34947, 
28.63215, 77.34940, 
28.63215, 77.34930, 
28.63216, 77.34926, 
28.63216, 77.34876, 
28.63216, 77.34861, 
28.63216, 77.34831, 
28.63216, 77.34809, 
28.63216, 77.34756, 
28.63217, 77.34674, 
28.63217, 77.34606, 
28.63218, 77.34584, 
28.63217, 77.34527, 
28.63214, 77.34411, 
28.63213, 77.34297, 
28.63213, 77.34258, 
28.63214, 77.34207, 
28.63214, 77.34144, 
28.63219, 77.33877, 
28.63220, 77.33850, 
28.63220, 77.33841, 
28.63220, 77.33835, 
28.63220, 77.33826, 
28.63220, 77.33820, 
28.63220, 77.33803, 
28.63221, 77.33787, 
28.63221, 77.33785, 
28.63221, 77.33771, 
28.63221, 77.33710, 
28.63221, 77.33695, 
28.63221, 77.33689, 
28.63222, 77.33657, 
28.63222, 77.33645, 
28.63224, 77.33556, 
28.63225, 77.33543, 
28.63226, 77.33528, 
28.63226, 77.33503, 
28.63226, 77.33488, 
28.63226, 77.33480, 
28.63226, 77.33467, 
28.63226, 77.33447, 
28.63226, 77.33443, 
28.63226, 77.33434, 
28.63225, 77.33425, 
28.63224, 77.33409, 
28.63224, 77.33405, 
28.63223, 77.33382, 
28.63220, 77.33356, 
28.63217, 77.33336, 
28.63217, 77.33335, 
28.63213, 77.33313, 
28.63208, 77.33286, 
28.63201, 77.33259, 
28.63192, 77.33224, 
28.63180, 77.33183, 
28.63173, 77.33161, 
28.63171, 77.33155, 
28.63165, 77.33135, 
28.63161, 77.33123, 
28.63149, 77.33084, 
28.63144, 77.33071, 
28.63133, 77.33038, 
28.63133, 77.33037, 
28.63129, 77.33027, 
28.63126, 77.33017, 
28.63120, 77.32998, 
28.63114, 77.32979, 
28.63113, 77.32977, 
28.63101, 77.32940, 
28.63094, 77.32919, 
28.63082, 77.32883, 
28.63081, 77.32878, 
28.63076, 77.32863, 
28.63070, 77.32844, 
28.63058, 77.32805, 
28.63052, 77.32786, 
28.63041, 77.32754, 
28.63036, 77.32735, 
28.63032, 77.32724, 
28.63032, 77.32722, 
28.63028, 77.32712, 
28.63021, 77.32688, 
28.63016, 77.32673, 
28.63010, 77.32654, 
28.63009, 77.32650, 
28.63004, 77.32635, 
28.62988, 77.32587, 
28.62977, 77.32554, 
28.62973, 77.32539, 
28.62962, 77.32505, 
28.62943, 77.32448, 
28.62932, 77.32419, 
28.62931, 77.32414, 
28.62920, 77.32380, 
28.62918, 77.32373, 
28.62906, 77.32338, 
28.62893, 77.32299, 
28.62880, 77.32278, 
28.62879, 77.32276, 
28.62878, 77.32273, 
28.62853, 77.32204, 
28.62836, 77.32145, 
28.62818, 77.32093, 
28.62805, 77.32051, 
28.62782, 77.31984, 
28.62756, 77.31906, 
28.62743, 77.31868, 
28.62736, 77.31847, 
28.62731, 77.31835, 
28.62724, 77.31818, 
28.62722, 77.31818, 
28.62721, 77.31817, 
28.62718, 77.31813, 
28.62716, 77.31808, 
28.62715, 77.31804, 
28.62714, 77.31802, 
28.62711, 77.31793, 
28.62708, 77.31784, 
28.62708, 77.31781, 
28.62707, 77.31769, 
28.62707, 77.31764, 
28.62707, 77.31758, 
28.62707, 77.31757, 
28.62709, 77.31753, 
28.62710, 77.31749, 
28.62711, 77.31747, 
28.62716, 77.31742, 
28.62720, 77.31738, 
28.62726, 77.31735, 
28.62732, 77.31732, 
28.62737, 77.31732, 
28.62743, 77.31732, 
28.62749, 77.31733, 
28.62750, 77.31734, 
28.62751, 77.31734, 
28.62753, 77.31735, 
28.62754, 77.31735, 
28.62755, 77.31736, 
28.62756, 77.31736, 
28.62757, 77.31737, 
28.62758, 77.31738, 
28.62763, 77.31739, 
28.62781, 77.31737, 
28.62806, 77.31728, 
28.62817, 77.31724, 
28.62822, 77.31721, 
28.62829, 77.31719, 
28.62834, 77.31717, 
28.62885, 77.31697, 
28.62891, 77.31694, 
28.62902, 77.31690, 
28.62953, 77.31669, 
28.62965, 77.31664, 
28.62978, 77.31659, 
28.62998, 77.31650, 
28.63017, 77.31643, 
28.63018, 77.31642, 
28.63019, 77.31642, 
28.63020, 77.31642, 
28.63021, 77.31642, 
28.63023, 77.31643, 
28.63027, 77.31645, 
28.63037, 77.31650, 
28.63062, 77.31640, 
28.63137, 77.31614, 
28.63170, 77.31602, 
28.63187, 77.31595, 
28.63188, 77.31595, 
28.63205, 77.31589, 
28.63272, 77.31564, 
28.63292, 77.31557, 
28.63311, 77.31550, 
28.63328, 77.31543, 
28.63345, 77.31536, 
28.63369, 77.31526, 
28.63379, 77.31522, 
28.63396, 77.31515, 
28.63413, 77.31508, 
28.63414, 77.31508, 
28.63423, 77.31505, 
28.63430, 77.31502, 
28.63472, 77.31487, 
28.63506, 77.31476, 
28.63512, 77.31474, 
28.63524, 77.31472, 
28.63542, 77.31468, 
28.63556, 77.31465, 
28.63578, 77.31461, 
28.63585, 77.31460, 
28.63593, 77.31459, 
28.63598, 77.31458, 
28.63609, 77.31456, 
28.63627, 77.31453, 
28.63629, 77.31452, 
28.63644, 77.31450, 
28.63649, 77.31449, 
28.63660, 77.31448, 
28.63662, 77.31448, 
28.63667, 77.31447, 
28.63680, 77.31447, 
28.63694, 77.31446, 
28.63702, 77.31446, 
28.63711, 77.31447, 
28.63750, 77.31449, 
28.63769, 77.31452, 
28.63783, 77.31454, 
28.63787, 77.31455, 
28.63788, 77.31455, 
28.63812, 77.31459, 
28.63832, 77.31465, 
28.63836, 77.31466, 
28.63888, 77.31482, 
28.63888, 77.31483, 
28.63905, 77.31489, 
28.63948, 77.31502, 
28.63965, 77.31508, 
28.63982, 77.31514, 
28.63999, 77.31520, 
28.64008, 77.31523, 
28.64027, 77.31532, 
28.64069, 77.31542, 
28.64134, 77.31569, 
28.64167, 77.31584, 
28.64183, 77.31591, 
28.64223, 77.31605, 
28.64236, 77.31610, 
28.64306, 77.31636, 
28.64412, 77.31670, 
28.64423, 77.31674, 
28.64444, 77.31681, 
28.64451, 77.31684, 
28.64489, 77.31697, 
28.64519, 77.31708, 
28.64540, 77.31715, 
28.64552, 77.31718, 
28.64568, 77.31724, 
28.64582, 77.31729, 
28.64616, 77.31740, 
28.64633, 77.31746, 
28.64646, 77.31750, 
28.64679, 77.31762, 
28.64685, 77.31764, 
28.64707, 77.31772, 
28.64801, 77.31806, 
28.64818, 77.31813, 
28.64843, 77.31822, 
28.64854, 77.31826, 
28.64863, 77.31829, 
28.64882, 77.31835, 
28.64928, 77.31852, 
28.64932, 77.31854, 
28.64943, 77.31858, 
28.64952, 77.31861, 
28.64961, 77.31864, 
28.64967, 77.31866, 
28.64972, 77.31868, 
28.65036, 77.31890, 
28.65116, 77.31918, 
28.65153, 77.31929, 
28.65164, 77.31932, 
28.65174, 77.31936, 
28.65190, 77.31939, 
28.65219, 77.31945, 
28.65226, 77.31947, 
28.65253, 77.31952, 
28.65268, 77.31954, 
28.65271, 77.31954, 
28.65280, 77.31955, 
28.65303, 77.31957, 
28.65325, 77.31959, 
28.65335, 77.31960, 
28.65349, 77.31960, 
28.65356, 77.31961, 
28.65378, 77.31963, 
28.65393, 77.31964, 
28.65429, 77.31967, 
28.65437, 77.31966, 
28.65454, 77.31966, 
28.65464, 77.31965, 
28.65471, 77.31966, 
28.65497, 77.31968, 
28.65503, 77.31968, 
28.65515, 77.31969, 
28.65535, 77.31970, 
28.65751, 77.31983, 
28.65913, 77.31992, 
28.65934, 77.31994, 
28.65941, 77.31994, 
28.65970, 77.31994, 
28.66005, 77.31995, 
28.66021, 77.31997, 
28.66046, 77.31998, 
28.66074, 77.31999, 
28.66119, 77.32000, 
28.66147, 77.32001, 
28.66161, 77.32003, 
28.66172, 77.32004, 
28.66179, 77.32005, 
28.66204, 77.32008, 
28.66232, 77.32011, 
28.66251, 77.32014, 
28.66271, 77.32018, 
28.66291, 77.32023, 
28.66312, 77.32029, 
28.66342, 77.32038, 
28.66372, 77.32049, 
28.66386, 77.32054, 
28.66394, 77.32057, 
28.66411, 77.32062, 
28.66428, 77.32068, 
28.66431, 77.32070, 
28.66445, 77.32074, 
28.66463, 77.32080, 
28.66470, 77.32082, 
28.66487, 77.32087, 
28.66504, 77.32092, 
28.66512, 77.32095, 
28.66539, 77.32104, 
28.66556, 77.32110, 
28.66577, 77.32117, 
28.66625, 77.32133, 
28.66662, 77.32146, 
28.66694, 77.32157, 
28.66695, 77.32158, 
28.66728, 77.32170, 
28.66738, 77.32173, 
28.66758, 77.32180, 
28.66763, 77.32182, 
28.66780, 77.32188, 
28.66790, 77.32192, 
28.66795, 77.32194, 
28.66814, 77.32200, 
28.66827, 77.32204, 
28.66853, 77.32213, 
28.66861, 77.32216, 
28.66864, 77.32217, 
28.66880, 77.32222, 
28.66882, 77.32223, 
28.66901, 77.32230, 
28.66923, 77.32238, 
28.66943, 77.32245, 
28.66960, 77.32251, 
28.66978, 77.32257, 
28.66999, 77.32265, 
28.67000, 77.32265, 
28.67007, 77.32267, 
28.67013, 77.32269, 
28.67016, 77.32270, 
28.67020, 77.32271, 
28.67024, 77.32271, 
28.67034, 77.32268, 
28.67044, 77.32272, 
28.67050, 77.32275, 
28.67056, 77.32277, 
28.67060, 77.32275, 
28.67064, 77.32273, 
28.67071, 77.32272, 
28.67079, 77.32272, 
28.67097, 77.32273, 
28.67123, 77.32275, 
28.67159, 77.32276, 
28.67171, 77.32276, 
28.67185, 77.32277, 
28.67195, 77.32276, 
28.67243, 77.32276, 
28.67290, 77.32276, 
28.67315, 77.32275, 
28.67330, 77.32275, 
28.67337, 77.32274, 
28.67345, 77.32274, 
28.67352, 77.32274, 
28.67380, 77.32274, 
28.67410, 77.32273, 
28.67418, 77.32272, 
28.67431, 77.32272, 
28.67436, 77.32272, 
28.67472, 77.32271, 
28.67505, 77.32271, 
28.67522, 77.32271, 
28.67558, 77.32271, 
28.67562, 77.32271, 
28.67586, 77.32272, 
28.67596, 77.32271, 
28.67600, 77.32271, 
28.67604, 77.32271, 
28.67605, 77.32271, 
28.67618, 77.32271, 
28.67622, 77.32271, 
28.67629, 77.32271, 
28.67631, 77.32271, 
28.67640, 77.32271, 
28.67641, 77.32271, 
28.67654, 77.32272, 
28.67658, 77.32272, 
28.67706, 77.32287, 
28.67751, 77.32303, 
28.67752, 77.32303, 
28.67786, 77.32316, 
28.67787, 77.32316, 
28.67811, 77.32327, 
28.67871, 77.32350, 
28.67883, 77.32357, 
28.67891, 77.32362, 
28.67899, 77.32367, 
28.67905, 77.32373, 
28.67911, 77.32379, 
28.67929, 77.32401, 
28.67935, 77.32411, 
28.67945, 77.32437, 
28.67950, 77.32445, 
28.68003, 77.32544, 
28.68018, 77.32572, 
28.68020, 77.32575, 
28.68029, 77.32596, 
28.68075, 77.32726, 
28.68113, 77.32818, 
28.68115, 77.32819, 
28.68116, 77.32819, 
28.68118, 77.32820, 
28.68119, 77.32821, 
28.68121, 77.32823, 
28.68190, 77.32784, 
28.68298, 77.32708, 
28.68316, 77.32694, 
28.68396, 77.32643, 
28.68458, 77.32606, 
28.68470, 77.32598, 
28.68481, 77.32591, 
28.68536, 77.32557, 
28.68662, 77.32468, 
28.68682, 77.32454, 
28.68697, 77.32437, 
28.68738, 77.32407, 
28.68747, 77.32401, 
28.68748, 77.32401, 
28.68818, 77.32350, 
28.68889, 77.32298, 
28.68920, 77.32276, 
28.68942, 77.32263, 
28.68951, 77.32258, 
28.68918, 77.32226, 
28.68888, 77.32195, 
28.68887, 77.32194, 
28.68871, 77.32176, 
28.68861, 77.32166, 
28.68850, 77.32155, 
28.68809, 77.32110, 
28.68805, 77.32105, 
28.68772, 77.32070, 
28.68765, 77.32063, 
28.68755, 77.32051, 
28.68758, 77.32048, 
28.68762, 77.32045, 
28.68796, 77.32002, 
28.68805, 77.31991, 
28.68824, 77.31963, 
28.68837, 77.31947, 
28.68847, 77.31934, 
28.68863, 77.31915, 
28.68876, 77.31904, 
28.68888, 77.31896, 
28.68896, 77.31890, 
28.68925, 77.31869, 
28.68929, 77.31867, 
28.69000, 77.31813, 
28.69059, 77.31765, 
28.69108, 77.31732, 
28.69146, 77.31702, 
28.69206, 77.31656, 
28.69248, 77.31623, 
28.69309, 77.31571, 
28.69361, 77.31533, 
28.69365, 77.31530, 
28.69404, 77.31502, 
28.69409, 77.31499, 
28.69418, 77.31494, 
28.69418, 77.31493, 
28.69418, 77.31492, 
28.69418, 77.31491, 
28.69418, 77.31490, 
28.69419, 77.31490, 
28.69376, 77.31429, 
28.69355, 77.31395, 
28.69330, 77.31354, 
28.69307, 77.31316, 
28.69252, 77.31230, 
28.69228, 77.31193, 
28.69221, 77.31182, 
28.69201, 77.31150, 
28.69169, 77.31099, 
28.69147, 77.31066, 
28.69132, 77.31041, 
28.69119, 77.31020, 
28.69085, 77.30965, 
28.69048, 77.30906, 
28.69048, 77.30905, 
28.69043, 77.30898, 
28.69033, 77.30877, 
28.69010, 77.30837, 
28.69005, 77.30829, 
28.69002, 77.30823, 
28.68999, 77.30818, 
28.68997, 77.30812, 
28.68996, 77.30806, 
28.68995, 77.30801, 
28.68994, 77.30789, 
28.68990, 77.30726, 
28.68990, 77.30718, 
28.68989, 77.30700, 
28.68989, 77.30697, 
28.68988, 77.30647, 
28.68986, 77.30609, 
28.68984, 77.30572, 
28.68982, 77.30540, 
28.68981, 77.30530, 
28.68981, 77.30521, 
28.68978, 77.30479, 
28.68975, 77.30444, 
28.68973, 77.30417, 
28.68972, 77.30398, 
28.68970, 77.30383, 
28.68970, 77.30375, 
28.68969, 77.30364, 
28.68968, 77.30355, 
28.68967, 77.30347, 
28.68967, 77.30341, 
28.68962, 77.30288, 
28.68957, 77.30226, 
28.68955, 77.30203, 
28.68953, 77.30179, 
28.68952, 77.30156, 
28.68951, 77.30133, 
28.68951, 77.30119, 
28.68950, 77.30108, 
28.68950, 77.30091, 
28.68948, 77.30029, 
28.68948, 77.29989, 
28.68948, 77.29986, 
28.68947, 77.29967, 
28.68947, 77.29947, 
28.68947, 77.29936, 
28.68947, 77.29930, 
28.68947, 77.29925, 
28.68947, 77.29891, 
28.68946, 77.29846, 
28.68945, 77.29836, 
28.68944, 77.29758, 
28.68943, 77.29725, 
28.68943, 77.29710, 
28.68942, 77.29676, 
28.68941, 77.29620, 
28.68941, 77.29602, 
28.68940, 77.29565, 
28.68940, 77.29556, 
28.68939, 77.29499, 
28.68938, 77.29474, 
28.68938, 77.29443, 
28.68937, 77.29429, 
28.68937, 77.29417, 
28.68936, 77.29408, 
28.68935, 77.29401, 
28.68935, 77.29391, 
28.68934, 77.29372, 
28.68933, 77.29354, 
28.68933, 77.29347, 
28.68933, 77.29336, 
28.68933, 77.29312, 
28.68932, 77.29290, 
28.68931, 77.29274, 
28.68930, 77.29252, 
28.68930, 77.29235, 
28.68929, 77.29203, 
28.68929, 77.29200, 
28.68928, 77.29190, 
28.68926, 77.29134, 
28.68925, 77.29101, 
28.68923, 77.29067, 
28.68923, 77.29031, 
28.68922, 77.28990, 
28.68922, 77.28966, 
28.68921, 77.28936, 
28.68919, 77.28909, 
28.68919, 77.28895, 
28.68920, 77.28862, 
28.68920, 77.28842, 
28.68931, 77.28768, 
28.68925, 77.28769, 
28.68909, 77.28771, 
28.68899, 77.28775, 
28.68867, 77.28781, 
28.68850, 77.28784, 
28.68833, 77.28787, 
28.68786, 77.28795
        """.trimIndent()

        return parseCoordinateString(coordinateString)
    }

    fun getArindamToHomeRoute(): List<RoutePoint> {
        val coordinateString = """
            28.61577, 77.42963, 
28.61564, 77.42967, 
28.61562, 77.42968, 
28.61559, 77.42969, 
28.61556, 77.42970, 
28.61554, 77.42970, 
28.61551, 77.42970, 
28.61550, 77.42970, 
28.61548, 77.42968, 
28.61537, 77.42945, 
28.61529, 77.42929, 
28.61521, 77.42912, 
28.61518, 77.42907, 
28.61518, 77.42904, 
28.61518, 77.42900, 
28.61519, 77.42896, 
28.61526, 77.42883, 
28.61481, 77.42823, 
28.61487, 77.42819, 
28.61491, 77.42817, 
28.61542, 77.42788, 
28.61558, 77.42780, 
28.61593, 77.42761, 
28.61596, 77.42758, 
28.61598, 77.42756, 
28.61618, 77.42743, 
28.61622, 77.42753, 
28.61628, 77.42768, 
28.61633, 77.42779, 
28.61643, 77.42801, 
28.61655, 77.42796, 
28.61647, 77.42777, 
28.61637, 77.42756, 
28.61624, 77.42728, 
28.61606, 77.42689, 
28.61588, 77.42652, 
28.61575, 77.42626, 
28.61558, 77.42594, 
28.61521, 77.42528, 
28.61514, 77.42515, 
28.61510, 77.42508, 
28.61505, 77.42499, 
28.61499, 77.42489, 
28.61493, 77.42478, 
28.61485, 77.42463, 
28.61480, 77.42454, 
28.61475, 77.42444, 
28.61456, 77.42412, 
28.61447, 77.42395, 
28.61436, 77.42377, 
28.61427, 77.42361, 
28.61419, 77.42346, 
28.61410, 77.42331, 
28.61402, 77.42316, 
28.61394, 77.42302, 
28.61376, 77.42270, 
28.61370, 77.42260, 
28.61367, 77.42254, 
28.61365, 77.42252, 
28.61363, 77.42247, 
28.61359, 77.42240, 
28.61356, 77.42234, 
28.61354, 77.42231, 
28.61352, 77.42227, 
28.61350, 77.42223, 
28.61349, 77.42222, 
28.61346, 77.42217, 
28.61341, 77.42208, 
28.61339, 77.42205, 
28.61335, 77.42198, 
28.61332, 77.42192, 
28.61322, 77.42175, 
28.61315, 77.42162, 
28.61308, 77.42149, 
28.61299, 77.42133, 
28.61290, 77.42116, 
28.61264, 77.42135, 
28.61245, 77.42147, 
28.61221, 77.42165, 
28.61117, 77.42247, 
28.61099, 77.42260, 
28.61095, 77.42264, 
28.61064, 77.42290, 
28.61048, 77.42262, 
28.61136, 77.42210, 
28.61179, 77.42179, 
28.61211, 77.42153, 
28.61236, 77.42134, 
28.61294, 77.42094, 
28.61349, 77.42057, 
28.61375, 77.42041, 
28.61383, 77.42036, 
28.61394, 77.42029, 
28.61426, 77.42008, 
28.61449, 77.41994, 
28.61470, 77.41980, 
28.61495, 77.41963, 
28.61570, 77.41909, 
28.61601, 77.41889, 
28.61602, 77.41888, 
28.61685, 77.41846, 
28.61713, 77.41830, 
28.61878, 77.41729, 
28.61885, 77.41723, 
28.61902, 77.41713, 
28.62003, 77.41650, 
28.62064, 77.41619, 
28.62111, 77.41597, 
28.62172, 77.41576, 
28.62222, 77.41562, 
28.62259, 77.41549, 
28.62268, 77.41546, 
28.62280, 77.41543, 
28.62341, 77.41525, 
28.62396, 77.41509, 
28.62426, 77.41500, 
28.62466, 77.41487, 
28.62672, 77.41426, 
28.62731, 77.41409, 
28.62793, 77.41389, 
28.62814, 77.41383, 
28.62861, 77.41369, 
28.62912, 77.41353, 
28.62924, 77.41350, 
28.62996, 77.41324, 
28.63004, 77.41321, 
28.63004, 77.41319, 
28.63004, 77.41318, 
28.63005, 77.41317, 
28.63005, 77.41316, 
28.63006, 77.41314, 
28.63008, 77.41313, 
28.63009, 77.41311, 
28.63011, 77.41309, 
28.63013, 77.41308, 
28.63015, 77.41307, 
28.63017, 77.41306, 
28.63019, 77.41305, 
28.63021, 77.41304, 
28.63023, 77.41304, 
28.63025, 77.41303, 
28.63027, 77.41303, 
28.63029, 77.41304, 
28.63031, 77.41304, 
28.63033, 77.41305, 
28.63035, 77.41305, 
28.63039, 77.41307, 
28.63056, 77.41306, 
28.63076, 77.41303, 
28.63111, 77.41295, 
28.63144, 77.41286, 
28.63178, 77.41275, 
28.63267, 77.41246, 
28.63349, 77.41222, 
28.63390, 77.41212, 
28.63644, 77.41155, 
28.63678, 77.41147, 
28.63752, 77.41132, 
28.63893, 77.41100, 
28.63923, 77.41093, 
28.64004, 77.41077, 
28.64021, 77.41073, 
28.64030, 77.41065, 
28.64040, 77.41058, 
28.64043, 77.41054, 
28.64046, 77.41051, 
28.64054, 77.41040, 
28.64050, 77.41027, 
28.64042, 77.40992, 
28.64038, 77.40972, 
28.64033, 77.40953, 
28.64023, 77.40914, 
28.64006, 77.40859, 
28.64003, 77.40850, 
28.63984, 77.40788, 
28.63984, 77.40787, 
28.63973, 77.40754, 
28.63967, 77.40734, 
28.63966, 77.40732, 
28.63953, 77.40690, 
28.63929, 77.40614, 
28.63918, 77.40578, 
28.63912, 77.40559, 
28.63870, 77.40424, 
28.63869, 77.40420, 
28.63852, 77.40367, 
28.63840, 77.40328, 
28.63833, 77.40307, 
28.63828, 77.40288, 
28.63816, 77.40252, 
28.63804, 77.40214, 
28.63798, 77.40194, 
28.63792, 77.40175, 
28.63786, 77.40156, 
28.63780, 77.40137, 
28.63760, 77.40073, 
28.63755, 77.40058, 
28.63738, 77.40003, 
28.63730, 77.39976, 
28.63724, 77.39957, 
28.63721, 77.39948, 
28.63718, 77.39938, 
28.63711, 77.39918, 
28.63705, 77.39899, 
28.63703, 77.39893, 
28.63696, 77.39871, 
28.63684, 77.39833, 
28.63681, 77.39822, 
28.63675, 77.39803, 
28.63670, 77.39785, 
28.63669, 77.39783, 
28.63654, 77.39732, 
28.63645, 77.39706, 
28.63634, 77.39669, 
28.63634, 77.39667, 
28.63634, 77.39664, 
28.63634, 77.39660, 
28.63635, 77.39658, 
28.63636, 77.39656, 
28.63628, 77.39630, 
28.63625, 77.39620, 
28.63622, 77.39611, 
28.63613, 77.39582, 
28.63601, 77.39543, 
28.63569, 77.39444, 
28.63533, 77.39333, 
28.63520, 77.39286, 
28.63506, 77.39239, 
28.63503, 77.39228, 
28.63502, 77.39225, 
28.63490, 77.39186, 
28.63478, 77.39147, 
28.63466, 77.39111, 
28.63459, 77.39089, 
28.63451, 77.39065, 
28.63431, 77.39001, 
28.63425, 77.38982, 
28.63417, 77.38955, 
28.63416, 77.38951, 
28.63410, 77.38934, 
28.63382, 77.38846, 
28.63366, 77.38793, 
28.63344, 77.38719, 
28.63325, 77.38660, 
28.63302, 77.38586, 
28.63294, 77.38559, 
28.63288, 77.38540, 
28.63263, 77.38460, 
28.63258, 77.38443, 
28.63254, 77.38427, 
28.63250, 77.38410, 
28.63232, 77.38337, 
28.63225, 77.38296, 
28.63220, 77.38269, 
28.63215, 77.38239, 
28.63209, 77.38193, 
28.63205, 77.38155, 
28.63201, 77.38117, 
28.63197, 77.37985, 
28.63197, 77.37955, 
28.63196, 77.37903, 
28.63196, 77.37820, 
28.63196, 77.37793, 
28.63195, 77.37733, 
28.63195, 77.37724, 
28.63195, 77.37719, 
28.63197, 77.37610, 
28.63197, 77.37506, 
28.63197, 77.37437, 
28.63197, 77.37426, 
28.63197, 77.37414, 
28.63196, 77.37408, 
28.63196, 77.37401, 
28.63199, 77.37281, 
28.63201, 77.37161, 
28.63201, 77.37120, 
28.63201, 77.37107, 
28.63201, 77.37066, 
28.63201, 77.37063, 
28.63203, 77.37001, 
28.63203, 77.36940, 
28.63203, 77.36939, 
28.63204, 77.36919, 
28.63204, 77.36902, 
28.63204, 77.36878, 
28.63204, 77.36841, 
28.63205, 77.36820, 
28.63205, 77.36813, 
28.63204, 77.36794, 
28.63205, 77.36732, 
28.63205, 77.36589, 
28.63205, 77.36568, 
28.63206, 77.36425, 
28.63206, 77.36397, 
28.63206, 77.36369, 
28.63208, 77.36103, 
28.63208, 77.36102, 
28.63208, 77.36082, 
28.63208, 77.36064, 
28.63208, 77.36044, 
28.63208, 77.36024, 
28.63208, 77.36021, 
28.63209, 77.35806, 
28.63209, 77.35781, 
28.63209, 77.35760, 
28.63210, 77.35634, 
28.63211, 77.35552, 
28.63211, 77.35524, 
28.63211, 77.35510, 
28.63211, 77.35476, 
28.63211, 77.35471, 
28.63211, 77.35450, 
28.63213, 77.35350, 
28.63213, 77.35308, 
28.63213, 77.35287, 
28.63214, 77.35207, 
28.63215, 77.35063, 
28.63215, 77.35061, 
28.63215, 77.35029, 
28.63215, 77.34999, 
28.63215, 77.34988, 
28.63215, 77.34957, 
28.63215, 77.34951, 
28.63215, 77.34947, 
28.63215, 77.34940, 
28.63215, 77.34930, 
28.63216, 77.34926, 
28.63216, 77.34876, 
28.63216, 77.34861, 
28.63216, 77.34831, 
28.63216, 77.34809, 
28.63216, 77.34756, 
28.63217, 77.34674, 
28.63217, 77.34606, 
28.63218, 77.34584, 
28.63217, 77.34527, 
28.63214, 77.34411, 
28.63213, 77.34297, 
28.63213, 77.34258, 
28.63214, 77.34207, 
28.63214, 77.34144, 
28.63216, 77.34041, 
28.63218, 77.33939, 
28.63219, 77.33877, 
28.63220, 77.33850, 
28.63220, 77.33841, 
28.63220, 77.33835, 
28.63220, 77.33826, 
28.63220, 77.33820, 
28.63220, 77.33803, 
28.63221, 77.33787, 
28.63221, 77.33785, 
28.63221, 77.33771, 
28.63221, 77.33751, 
28.63221, 77.33710, 
28.63221, 77.33695, 
28.63221, 77.33689, 
28.63222, 77.33657, 
28.63222, 77.33645, 
28.63224, 77.33556, 
28.63225, 77.33543, 
28.63226, 77.33528, 
28.63226, 77.33503, 
28.63226, 77.33488, 
28.63226, 77.33480, 
28.63226, 77.33467, 
28.63226, 77.33447, 
28.63226, 77.33443, 
28.63226, 77.33434, 
28.63225, 77.33425, 
28.63224, 77.33409, 
28.63224, 77.33405, 
28.63223, 77.33382, 
28.63220, 77.33356, 
28.63217, 77.33336, 
28.63217, 77.33335, 
28.63213, 77.33313, 
28.63208, 77.33286, 
28.63201, 77.33259, 
28.63192, 77.33224, 
28.63180, 77.33183, 
28.63173, 77.33161, 
28.63171, 77.33155, 
28.63165, 77.33135, 
28.63161, 77.33123, 
28.63149, 77.33084, 
28.63144, 77.33071, 
28.63133, 77.33038, 
28.63133, 77.33037, 
28.63129, 77.33027, 
28.63126, 77.33017, 
28.63120, 77.32998, 
28.63114, 77.32979, 
28.63113, 77.32977, 
28.63108, 77.32960, 
28.63101, 77.32940, 
28.63094, 77.32919, 
28.63082, 77.32883, 
28.63081, 77.32878, 
28.63076, 77.32863, 
28.63070, 77.32844, 
28.63058, 77.32805, 
28.63052, 77.32786, 
28.63041, 77.32754, 
28.63036, 77.32735, 
28.63032, 77.32724, 
28.63032, 77.32722, 
28.63028, 77.32712, 
28.63021, 77.32688, 
28.63016, 77.32673, 
28.63010, 77.32654, 
28.63009, 77.32650, 
28.63004, 77.32635, 
28.62988, 77.32587, 
28.62977, 77.32554, 
28.62973, 77.32539, 
28.62962, 77.32505, 
28.62943, 77.32448, 
28.62932, 77.32419, 
28.62931, 77.32414, 
28.62920, 77.32380, 
28.62918, 77.32373, 
28.62906, 77.32338, 
28.62893, 77.32299, 
28.62880, 77.32278, 
28.62879, 77.32276, 
28.62878, 77.32273, 
28.62853, 77.32204, 
28.62836, 77.32145, 
28.62818, 77.32093, 
28.62805, 77.32051, 
28.62782, 77.31984, 
28.62756, 77.31906, 
28.62743, 77.31868, 
28.62736, 77.31847, 
28.62731, 77.31835, 
28.62724, 77.31818, 
28.62722, 77.31818, 
28.62721, 77.31817, 
28.62718, 77.31813, 
28.62716, 77.31808, 
28.62715, 77.31804, 
28.62714, 77.31802, 
28.62711, 77.31793, 
28.62708, 77.31784, 
28.62708, 77.31781, 
28.62707, 77.31769, 
28.62707, 77.31764, 
28.62707, 77.31758, 
28.62707, 77.31757, 
28.62709, 77.31753, 
28.62710, 77.31749, 
28.62711, 77.31747, 
28.62716, 77.31742, 
28.62720, 77.31738, 
28.62726, 77.31735, 
28.62732, 77.31732, 
28.62737, 77.31732, 
28.62743, 77.31732, 
28.62749, 77.31733, 
28.62750, 77.31734, 
28.62751, 77.31734, 
28.62753, 77.31735, 
28.62754, 77.31735, 
28.62755, 77.31736, 
28.62756, 77.31736, 
28.62757, 77.31737, 
28.62758, 77.31738, 
28.62763, 77.31739, 
28.62781, 77.31737, 
28.62806, 77.31728, 
28.62817, 77.31724, 
28.62822, 77.31721, 
28.62829, 77.31719, 
28.62834, 77.31717, 
28.62885, 77.31697, 
28.62891, 77.31694, 
28.62902, 77.31690, 
28.62953, 77.31669, 
28.62965, 77.31664, 
28.62978, 77.31659, 
28.62998, 77.31650, 
28.63017, 77.31643, 
28.63018, 77.31642, 
28.63019, 77.31642, 
28.63020, 77.31642, 
28.63021, 77.31642, 
28.63023, 77.31643, 
28.63027, 77.31645, 
28.63037, 77.31650, 
28.63062, 77.31640, 
28.63137, 77.31614, 
28.63170, 77.31602, 
28.63187, 77.31595, 
28.63188, 77.31595, 
28.63205, 77.31589, 
28.63272, 77.31564, 
28.63292, 77.31557, 
28.63311, 77.31550, 
28.63328, 77.31543, 
28.63345, 77.31536, 
28.63369, 77.31526, 
28.63379, 77.31522, 
28.63396, 77.31515, 
28.63413, 77.31508, 
28.63414, 77.31508, 
28.63423, 77.31505, 
28.63430, 77.31502, 
28.63472, 77.31487, 
28.63506, 77.31476, 
28.63512, 77.31474, 
28.63524, 77.31472, 
28.63542, 77.31468, 
28.63556, 77.31465, 
28.63578, 77.31461, 
28.63585, 77.31460, 
28.63593, 77.31459, 
28.63598, 77.31458, 
28.63609, 77.31456, 
28.63627, 77.31453, 
28.63629, 77.31452, 
28.63644, 77.31450, 
28.63649, 77.31449, 
28.63660, 77.31448, 
28.63662, 77.31448, 
28.63667, 77.31447, 
28.63680, 77.31447, 
28.63694, 77.31446, 
28.63702, 77.31446, 
28.63711, 77.31447, 
28.63750, 77.31449, 
28.63769, 77.31452, 
28.63783, 77.31454, 
28.63787, 77.31455, 
28.63788, 77.31455, 
28.63812, 77.31459, 
28.63832, 77.31465, 
28.63836, 77.31466, 
28.63888, 77.31482, 
28.63888, 77.31483, 
28.63905, 77.31489, 
28.63948, 77.31502, 
28.63965, 77.31508, 
28.63982, 77.31514, 
28.63999, 77.31520, 
28.64008, 77.31523, 
28.64027, 77.31532, 
28.64069, 77.31542, 
28.64134, 77.31569, 
28.64167, 77.31584, 
28.64183, 77.31591, 
28.64223, 77.31605, 
28.64236, 77.31610, 
28.64306, 77.31636, 
28.64412, 77.31670, 
28.64423, 77.31674, 
28.64444, 77.31681, 
28.64451, 77.31684, 
28.64489, 77.31697, 
28.64519, 77.31708, 
28.64540, 77.31715, 
28.64552, 77.31718, 
28.64568, 77.31724, 
28.64582, 77.31729, 
28.64616, 77.31740, 
28.64633, 77.31746, 
28.64646, 77.31750, 
28.64679, 77.31762, 
28.64685, 77.31764, 
28.64707, 77.31772, 
28.64801, 77.31806, 
28.64818, 77.31813, 
28.64843, 77.31822, 
28.64854, 77.31826, 
28.64863, 77.31829, 
28.64882, 77.31835, 
28.64928, 77.31852, 
28.64932, 77.31854, 
28.64943, 77.31858, 
28.64952, 77.31861, 
28.64961, 77.31864, 
28.64967, 77.31866, 
28.64972, 77.31868, 
28.65036, 77.31890, 
28.65116, 77.31918, 
28.65153, 77.31929, 
28.65164, 77.31932, 
28.65174, 77.31936, 
28.65190, 77.31939, 
28.65219, 77.31945, 
28.65226, 77.31947, 
28.65253, 77.31952, 
28.65268, 77.31954, 
28.65271, 77.31954, 
28.65280, 77.31955, 
28.65303, 77.31957, 
28.65325, 77.31959, 
28.65335, 77.31960, 
28.65349, 77.31960, 
28.65356, 77.31961, 
28.65378, 77.31963, 
28.65393, 77.31964, 
28.65429, 77.31967, 
28.65437, 77.31966, 
28.65454, 77.31966, 
28.65464, 77.31965, 
28.65471, 77.31966, 
28.65497, 77.31968, 
28.65503, 77.31968, 
28.65515, 77.31969, 
28.65535, 77.31970, 
28.65751, 77.31983, 
28.65913, 77.31992, 
28.65934, 77.31994, 
28.65941, 77.31994, 
28.65970, 77.31994, 
28.66005, 77.31995, 
28.66021, 77.31997, 
28.66046, 77.31998, 
28.66074, 77.31999, 
28.66119, 77.32000, 
28.66147, 77.32001, 
28.66161, 77.32003, 
28.66172, 77.32004, 
28.66179, 77.32005, 
28.66204, 77.32008, 
28.66232, 77.32011, 
28.66251, 77.32014, 
28.66271, 77.32018, 
28.66291, 77.32023, 
28.66312, 77.32029, 
28.66342, 77.32038, 
28.66372, 77.32049, 
28.66386, 77.32054, 
28.66394, 77.32057, 
28.66411, 77.32062, 
28.66428, 77.32068, 
28.66431, 77.32070, 
28.66445, 77.32074, 
28.66463, 77.32080, 
28.66470, 77.32082, 
28.66487, 77.32087, 
28.66504, 77.32092, 
28.66512, 77.32095, 
28.66539, 77.32104, 
28.66556, 77.32110, 
28.66577, 77.32117, 
28.66625, 77.32133, 
28.66662, 77.32146, 
28.66694, 77.32157, 
28.66695, 77.32158, 
28.66728, 77.32170, 
28.66738, 77.32173, 
28.66758, 77.32180, 
28.66763, 77.32182, 
28.66780, 77.32188, 
28.66790, 77.32192, 
28.66795, 77.32194, 
28.66814, 77.32200, 
28.66827, 77.32204, 
28.66853, 77.32213, 
28.66861, 77.32216, 
28.66864, 77.32217, 
28.66880, 77.32222, 
28.66882, 77.32223, 
28.66901, 77.32230, 
28.66923, 77.32238, 
28.66943, 77.32245, 
28.66960, 77.32251, 
28.66978, 77.32257, 
28.66999, 77.32265, 
28.67000, 77.32265, 
28.67007, 77.32267, 
28.67013, 77.32269, 
28.67016, 77.32270, 
28.67020, 77.32271, 
28.67024, 77.32271, 
28.67034, 77.32268, 
28.67044, 77.32272, 
28.67050, 77.32275, 
28.67056, 77.32277, 
28.67060, 77.32275, 
28.67064, 77.32273, 
28.67071, 77.32272, 
28.67079, 77.32272, 
28.67097, 77.32273, 
28.67123, 77.32275, 
28.67159, 77.32276, 
28.67171, 77.32276, 
28.67185, 77.32277, 
28.67195, 77.32276, 
28.67243, 77.32276, 
28.67290, 77.32276, 
28.67315, 77.32275, 
28.67330, 77.32275, 
28.67337, 77.32274, 
28.67345, 77.32274, 
28.67352, 77.32274, 
28.67380, 77.32274, 
28.67410, 77.32273, 
28.67418, 77.32272, 
28.67431, 77.32272, 
28.67436, 77.32272, 
28.67472, 77.32271, 
28.67505, 77.32271, 
28.67522, 77.32271, 
28.67558, 77.32271, 
28.67562, 77.32271, 
28.67586, 77.32272, 
28.67596, 77.32271, 
28.67600, 77.32271, 
28.67604, 77.32271, 
28.67605, 77.32271, 
28.67618, 77.32271, 
28.67622, 77.32271, 
28.67629, 77.32271, 
28.67631, 77.32271, 
28.67640, 77.32271, 
28.67641, 77.32271, 
28.67654, 77.32272, 
28.67658, 77.32272, 
28.67706, 77.32287, 
28.67751, 77.32303, 
28.67752, 77.32303, 
28.67786, 77.32316, 
28.67787, 77.32316, 
28.67811, 77.32327, 
28.67871, 77.32350, 
28.67883, 77.32357, 
28.67891, 77.32362, 
28.67899, 77.32367, 
28.67905, 77.32373, 
28.67911, 77.32379, 
28.67929, 77.32401, 
28.67935, 77.32411, 
28.67945, 77.32437, 
28.67950, 77.32445, 
28.68003, 77.32544, 
28.68018, 77.32572, 
28.68020, 77.32575, 
28.68029, 77.32596, 
28.68075, 77.32726, 
28.68113, 77.32818, 
28.68115, 77.32819, 
28.68116, 77.32819, 
28.68118, 77.32820, 
28.68119, 77.32821, 
28.68121, 77.32823, 
28.68190, 77.32784, 
28.68298, 77.32708, 
28.68316, 77.32694, 
28.68396, 77.32643, 
28.68458, 77.32606, 
28.68470, 77.32598, 
28.68481, 77.32591, 
28.68536, 77.32557, 
28.68662, 77.32468, 
28.68682, 77.32454, 
28.68697, 77.32437, 
28.68738, 77.32407, 
28.68747, 77.32401, 
28.68748, 77.32401, 
28.68818, 77.32350, 
28.68889, 77.32298, 
28.68920, 77.32276, 
28.68942, 77.32263, 
28.68951, 77.32258, 
28.68918, 77.32226, 
28.68888, 77.32195, 
28.68887, 77.32194, 
28.68871, 77.32176, 
28.68861, 77.32166, 
28.68850, 77.32155, 
28.68809, 77.32110, 
28.68805, 77.32105, 
28.68772, 77.32070, 
28.68765, 77.32063, 
28.68755, 77.32051, 
28.68758, 77.32048, 
28.68762, 77.32045, 
28.68796, 77.32002, 
28.68805, 77.31991, 
28.68824, 77.31963, 
28.68837, 77.31947, 
28.68847, 77.31934, 
28.68863, 77.31915, 
28.68876, 77.31904, 
28.68888, 77.31896, 
28.68896, 77.31890, 
28.68925, 77.31869, 
28.68929, 77.31867, 
28.69000, 77.31813, 
28.69059, 77.31765, 
28.69108, 77.31732, 
28.69146, 77.31702, 
28.69206, 77.31656, 
28.69248, 77.31623, 
28.69309, 77.31571, 
28.69361, 77.31533, 
28.69365, 77.31530, 
28.69404, 77.31502, 
28.69409, 77.31499, 
28.69418, 77.31494, 
28.69418, 77.31493, 
28.69418, 77.31492, 
28.69418, 77.31491, 
28.69418, 77.31490, 
28.69419, 77.31490, 
28.69376, 77.31429, 
28.69355, 77.31395, 
28.69330, 77.31354, 
28.69307, 77.31316, 
28.69252, 77.31230, 
28.69228, 77.31193, 
28.69221, 77.31182, 
28.69201, 77.31150, 
28.69169, 77.31099, 
28.69147, 77.31066, 
28.69132, 77.31041, 
28.69119, 77.31020, 
28.69085, 77.30965, 
28.69048, 77.30906, 
28.69048, 77.30905, 
28.69043, 77.30898, 
28.69033, 77.30877, 
28.69010, 77.30837, 
28.69005, 77.30829, 
28.69002, 77.30823, 
28.68999, 77.30818, 
28.68997, 77.30812, 
28.68996, 77.30806, 
28.68995, 77.30801, 
28.68994, 77.30789, 
28.68990, 77.30726, 
28.68990, 77.30718, 
28.68989, 77.30700, 
28.68989, 77.30697, 
28.68988, 77.30647, 
28.68986, 77.30609, 
28.68984, 77.30572, 
28.68982, 77.30540, 
28.68981, 77.30530, 
28.68981, 77.30521, 
28.68978, 77.30479, 
28.68975, 77.30444, 
28.68973, 77.30417, 
28.68972, 77.30398, 
28.68970, 77.30383, 
28.68970, 77.30375, 
28.68969, 77.30364, 
28.68968, 77.30355, 
28.68967, 77.30347, 
28.68967, 77.30341, 
28.68962, 77.30288, 
28.68957, 77.30226, 
28.68955, 77.30203, 
28.68953, 77.30179, 
28.68952, 77.30156, 
28.68951, 77.30133, 
28.68951, 77.30119, 
28.68950, 77.30108, 
28.68950, 77.30091, 
28.68948, 77.30029, 
28.68948, 77.29989, 
28.68948, 77.29986, 
28.68947, 77.29967, 
28.68947, 77.29947, 
28.68947, 77.29936, 
28.68947, 77.29930, 
28.68947, 77.29925, 
28.68947, 77.29891, 
28.68946, 77.29846, 
28.68945, 77.29836, 
28.68944, 77.29758, 
28.68943, 77.29725, 
28.68943, 77.29710, 
28.68942, 77.29676, 
28.68941, 77.29620, 
28.68941, 77.29602, 
28.68940, 77.29565, 
28.68940, 77.29556, 
28.68939, 77.29499, 
28.68938, 77.29474, 
28.68938, 77.29443, 
28.68937, 77.29429, 
28.68937, 77.29417, 
28.68936, 77.29408, 
28.68935, 77.29401, 
28.68935, 77.29391, 
28.68934, 77.29372, 
28.68933, 77.29354, 
28.68933, 77.29347, 
28.68933, 77.29336, 
28.68933, 77.29312, 
28.68932, 77.29290, 
28.68931, 77.29274, 
28.68930, 77.29252, 
28.68930, 77.29235, 
28.68929, 77.29203, 
28.68929, 77.29200, 
28.68928, 77.29190, 
28.68926, 77.29134, 
28.68925, 77.29101, 
28.68923, 77.29067, 
28.68923, 77.29031, 
28.68922, 77.28990, 
28.68922, 77.28966, 
28.68921, 77.28936, 
28.68919, 77.28909, 
28.68919, 77.28895, 
28.68920, 77.28862, 
28.68920, 77.28842, 
28.68931, 77.28768, 
28.68925, 77.28769, 
28.68909, 77.28771, 
28.68899, 77.28775, 
28.68867, 77.28781, 
28.68850, 77.28784, 
28.68833, 77.28787, 
28.68786, 77.28795
        """.trimIndent()

        return parseCoordinateString(coordinateString)
    }

    /**
     * Simulate your custom route with realistic timing
     */
    fun simulateCustomRoute(
        startLocation: CustomLocations,
        endLocation: CustomLocations,
        intervalSeconds: Long = 2L,
        speedKmh: Double = 30.0,
        onLocationUpdate: ((RoutePoint, Int, Int) -> Unit)? = null,
        onRouteComplete: (() -> Unit)? = null
    ) {
        stopRouteSimulation()


        val route = when {
            startLocation == CustomLocations.OFFICE && endLocation == CustomLocations.HOME -> {
                getOfficeToHomeRoute()
            }
            startLocation == CustomLocations.HOME && endLocation == CustomLocations.OFFICE -> {
                getOfficeToHomeRoute().reversed()
            }
            startLocation == CustomLocations.SPOT && endLocation == CustomLocations.HOME -> {
                getSpotToHomeRoute()
            }
            startLocation == CustomLocations.HOME && endLocation == CustomLocations.SPOT -> {
                getSpotToHomeRoute().reversed()
            }
            startLocation == CustomLocations.ARINDAM && endLocation == CustomLocations.HOME -> {
                getArindamToHomeRoute()
            }
            startLocation == CustomLocations.HOME && endLocation == CustomLocations.ARINDAM -> {
                getArindamToHomeRoute().reversed()
            }
            else -> {
                Log.e("MockLocation", "Unsupported custom location pair")
                return
            }
        }

        if (route.isEmpty()) {
            Log.e("MockLocation", "Custom route is empty")
            return
        }

        // Optionally thin out the route for performance (every 3rd point for smoother playback)
        val thinningFactor = 1
        val thinnedRoute = route.filterIndexed { index, _ -> index % thinningFactor == 0 }

        Log.d(
            "MockLocation",
            "Starting custom route simulation with ${thinnedRoute.size} points (original: ${route.size})"
        )

        routeJob = CoroutineScope(Dispatchers.Main).launch {
            isRouteActive = true

            for (i in 0 until thinnedRoute.size - 1) {
                if (!isRouteActive) return@launch

                val currentPoint = thinnedRoute[i]
                val nextPoint = thinnedRoute[i + 1]

                // Set current location
                setMockLocation(
                    currentPoint.latitude,
                    currentPoint.longitude,
                    currentPoint.accuracy
                )

                // Calculate distance to next point
                val distance = calculateDistance(
                    currentPoint.latitude, currentPoint.longitude,
                    nextPoint.latitude, nextPoint.longitude
                )

                // For custom route, use either fixed interval or realistic timing
                val delayMs = if (speedKmh > 0) {
                    val timeSeconds = (distance / 1000.0) / speedKmh * 3600.0
                    (timeSeconds * 1000).toLong().coerceAtLeast(1000) // Min 1 second
                } else {
                    intervalSeconds * 1000 // Fixed interval
                }

                Log.d(
                    "MockLocation",
                    "Point ${i + 1}/${thinnedRoute.size}: ${currentPoint.latitude}, ${currentPoint.longitude} (distance: ${distance.toInt()}m)"
                )
                onLocationUpdate?.invoke(currentPoint, i, thinnedRoute.size)

                // Wait before next location
                delay(delayMs)
            }

            // Set final location
            val finalPoint = thinnedRoute.last()
            setMockLocation(finalPoint.latitude, finalPoint.longitude, finalPoint.accuracy)
            onLocationUpdate?.invoke(finalPoint, thinnedRoute.size - 1, thinnedRoute.size)

            isRouteActive = false
            onRouteComplete?.invoke()
        }
    }

    fun stopRouteSimulation() {
        isRouteActive = false
        routeJob?.cancel()
        routeJob = null

        Log.d("MockLocation", "Route simulation stopped")
    }

    fun isRouteSimulationActive(): Boolean = isRouteActive

    private fun calculateDistance(lat1: Double, lng1: Double, lat2: Double, lng2: Double): Float {
        val results = FloatArray(1)
        Location.distanceBetween(lat1, lng1, lat2, lng2, results)
        return results[0]
    }

    private fun checkLocationPermissions(): Boolean {
        return ActivityCompat.checkSelfPermission(
            context,
            android.Manifest.permission.ACCESS_FINE_LOCATION
        ) == android.content.pm.PackageManager.PERMISSION_GRANTED ||
                ActivityCompat.checkSelfPermission(
                    context,
                    android.Manifest.permission.ACCESS_COARSE_LOCATION
                ) == android.content.pm.PackageManager.PERMISSION_GRANTED
    }

    suspend fun forceLocationRefresh(): Boolean {
        return try {
            // Stop all location services
            stopRealLocationUpdates()
            stopRouteSimulation()

            // Disable mock mode
            enableMockMode(false)

            // Wait a moment for system to reset
            delay(1000)

            // Request current location with high priority
            val success = getCurrentLocationFresh()

            if (success) {
                // Start regular location updates
                requestRealLocationUpdates()
            } else {
                false
            }
        } catch (e: Exception) {
            Log.e("MockLocation", "Error during force refresh", e)
            false
        }
    }

    private suspend fun requestRealLocationUpdates(): Boolean {
        return suspendCancellableCoroutine { continuation ->
            if (checkLocationPermissions()) {
                try {
                    // Create high-accuracy location request
                    locationRequest = LocationRequest.Builder(
                        Priority.PRIORITY_HIGH_ACCURACY,
                        5000L // 5 second intervals
                    )
                        .setMinUpdateIntervalMillis(2000L) // Min 2 seconds
                        .setMaxUpdateDelayMillis(10000L) // Max 10 seconds delay
                        .build()

                    locationCallback = object : LocationCallback() {
                        @RequiresApi(Build.VERSION_CODES.S)
                        override fun onLocationResult(locationResult: LocationResult) {
                            locationResult.lastLocation?.let { location ->
                                if (!location.isMock) {
                                    Log.d("MockLocation", "Real location received: ${location.latitude}, ${location.longitude}")
                                    // Optionally stop after getting first real location
                                    // stopRealLocationUpdates()
                                } else {
                                    Log.w("MockLocation", "Still receiving mock location")
                                }
                            }
                        }
                    }

                    // Start location updates
                    fusedLocationClient.requestLocationUpdates(
                        locationRequest!!,
                        locationCallback!!,
                        Looper.getMainLooper()
                    ).addOnSuccessListener {
                        Log.d("MockLocation", "Real location updates started")
                        continuation.resume(true)
                    }.addOnFailureListener { exception ->
                        Log.e("MockLocation", "Failed to start real location updates", exception)
                        continuation.resume(false)
                    }

                } catch (e: Exception) {
                    Log.e("MockLocation", "Exception while setting up real location updates", e)
                    continuation.resume(false)
                }
            } else {
                Log.e("MockLocation", "Location permissions not granted")
                continuation.resume(false)
            }
        }
    }

    fun stopRealLocationUpdates() {
        locationCallback?.let { callback ->
            fusedLocationClient.removeLocationUpdates(callback)
            Log.d("MockLocation", "Real location updates stopped")
        }
        locationCallback = null
        locationRequest = null
    }

    /**
     * Get current location with fresh request (bypasses cache)
     */
    private suspend fun getCurrentLocationFresh(): Boolean {
        return suspendCancellableCoroutine { continuation ->
            if (checkLocationPermissions()) {
                fusedLocationClient.getCurrentLocation(
                    Priority.PRIORITY_HIGH_ACCURACY,
                    null
                ).addOnSuccessListener { location ->
                    if (location != null) {
                        Log.d("MockLocation", "Fresh current location: ${location.latitude}, ${location.longitude}")
                        continuation.resume(true)
                    } else {
                        Log.w("MockLocation", "No current location available")
                        continuation.resume(false)
                    }
                }.addOnFailureListener { exception ->
                    Log.e("MockLocation", "Failed to get current location", exception)
                    continuation.resume(false)
                }
            } else {
                continuation.resume(false)
            }
        }
    }
}
